# meta developer: @LavaModules

from .. import loader, utils
import aiohttp

@loader.tds
class WeatherMod(loader.Module):
    """–ú–æ–¥—É–ª—å –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞ –ø–æ–≥–æ–¥—ã"""

    strings = {
        "name": "L:Weather",
        "no_city": "<b>[‚òÅÔ∏è] - –£–∫–∞–∂–∏—Ç–µ –≥–æ—Ä–æ–¥!</b>",
        "error": "<b>[‚òÅÔ∏è] - –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ–≥–æ–¥—ã.</b>",
        "weather": (
            "<b>[‚òÅÔ∏è] - –ü–æ–≥–æ–¥–∞ –≤ {}</b>\n\n"
            "<b>‚Ä¢ [ü´ü] –°–æ—Å—Ç–æ—è–Ω–∏–µ: {}</b>\n"
            "<b>‚Ä¢ [ü´ü] –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {}¬∞C</b>\n"
            "<b>‚Ä¢ [ü´ü] –í–µ—Ç–µ—Ä: {} –∫–º/—á</b>\n"
            "<b>‚Ä¢ [ü´ü] –í–ª–∞–∂–Ω–æ—Å—Ç—å: {}%</b>"
        )
    }

    async def weathercmd(self, message):
        """–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: .weather <–≥–æ—Ä–æ–¥>"""
        args = utils.get_args_raw(message)
        
        if not args:
            await utils.answer(message, self.strings["no_city"])
            return

        async with aiohttp.ClientSession() as session:
            try:
                async with session.get(
                    f"https://wttr.in/{args}?format=j1&lang=ru",
                    headers={"User-Agent": "curl/7.68.0"}
                ) as response:
                    if response.status != 200:
                        await utils.answer(message, self.strings["error"])
                        return
                    
                    weather_data = await response.json()
                    current = weather_data["current_condition"][0]
                    
                    await utils.answer(
                        message,
                        self.strings["weather"].format(
                            args,
                            current["lang_ru"][0]["value"],
                            current["temp_C"],
                            current["windspeedKmph"],
                            current["humidity"]
                        )
                    )
            except Exception as e:
                await utils.answer(message, self.strings["error"])
